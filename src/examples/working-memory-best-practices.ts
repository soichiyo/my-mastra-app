// ワーキングメモリのベストプラクティスガイド

export const workingMemoryBestPractices = {
  // 1. 情報の選択性
  informationSelection: {
    title: "情報の選択性",
    description: "ワーキングメモリに保存する情報を慎重に選択する",
    guidelines: [
      "複数の会話で関連性のある情報のみを保存",
      "一時的な詳細は避け、重要な情報のみを記録",
      "ユーザーの好み、習慣、重要な状況を優先",
      "頻繁に変更される情報は避ける",
    ],
    examples: {
      good: [
        "ユーザーの名前、場所、職業",
        "コミュニケーションスタイルの好み",
        "技術レベルと興味",
        "現在のプロジェクトや目標",
      ],
      avoid: [
        "一時的な会話の詳細",
        "頻繁に変更される予定",
        "技術的な詳細（会話履歴で十分）",
        "感情的な反応（一時的）",
      ],
    },
  },

  // 2. 明確な指示
  clearInstructions: {
    title: "明確な指示",
    description: "エージェントに明確で具体的な指示を与える",
    guidelines: [
      "ワーキングメモリの更新タイミングを明確に指定",
      "情報の保存方法と使用方法を具体的に説明",
      "既知の情報について質問しないよう指示",
      "パーソナライゼーションの方法を明確化",
    ],
    examples: {
      instructions: [
        "ユーザーが新しい情報を提供したら、適切なセクションに保存してください",
        "会話中にワーキングメモリの情報を活用してパーソナライズされた応答を提供してください",
        "ユーザーが既に提供した情報について質問する前に、ワーキングメモリを参照してください",
        "情報が更新されたら、古い情報を新しい情報で置き換えてください",
      ],
    },
  },

  // 3. テンプレート設計
  templateDesign: {
    title: "テンプレート設計",
    description: "用途に特化した効果的なテンプレートを設計する",
    guidelines: [
      "エージェントの特定の用途に基づいて構造を設計",
      "関連する情報を論理的にグループ化",
      "明確なラベルと組織化で情報を見つけやすくする",
      "更新可能な構造を前提とした設計",
    ],
    examples: {
      structure: [
        "基本情報セクション",
        "好み・設定セクション",
        "現在の状況セクション",
        "履歴・進捗セクション",
        "会話状態セクション",
      ],
      organization: [
        "階層的な構造（メインセクション → サブセクション）",
        "明確なラベルと説明",
        "一貫したフォーマット",
        "検索しやすい項目名",
      ],
    },
  },

  // 4. 包括的なテスト
  comprehensiveTesting: {
    title: "包括的なテスト",
    description: "ワーキングメモリ機能を包括的にテストする",
    guidelines: [
      "情報の保存と取得をテスト",
      "エッジケース（矛盾する情報、修正）をテスト",
      "長期的な記憶保持をテスト",
      "パフォーマンスと効率性をテスト",
    ],
    examples: {
      testScenarios: [
        "基本情報の提供と確認",
        "情報の更新と修正",
        "新しいトピック後の記憶保持",
        "複数セッションでの一貫性",
        "矛盾する情報の処理",
        "大量の情報でのパフォーマンス",
      ],
      testCases: [
        "ユーザーが名前を変更した場合",
        "好みが時間とともに変化した場合",
        "複数の問題が同時に発生した場合",
        "長期間の会話での記憶保持",
        "異なるトピック間での情報の関連性",
      ],
    },
  },

  // 5. 継続的な改善
  continuousImprovement: {
    title: "継続的な改善",
    description: "ワーキングメモリ機能を継続的に改善する",
    guidelines: [
      "ユーザーフィードバックを収集して改善",
      "使用パターンを分析して最適化",
      "テンプレートと指示を定期的に見直し",
      "新しい用途に合わせて機能を拡張",
    ],
    examples: {
      improvementAreas: [
        "テンプレートの構造と項目",
        "エージェントの指示とガイドライン",
        "情報の選択基準",
        "パフォーマンスと効率性",
        "ユーザー体験の向上",
      ],
      metrics: [
        "情報の正確性",
        "応答の関連性",
        "ユーザー満足度",
        "問題解決の効率性",
        "記憶保持の期間",
      ],
    },
  },
};

// ベストプラクティスの実装例
export function implementBestPractices(useCase: string) {
  const practices = workingMemoryBestPractices;

  console.log(`🔧 ${useCase}向けワーキングメモリベストプラクティス\n`);

  Object.entries(practices).forEach(([key, practice]) => {
    console.log(`📋 ${practice.title}`);
    console.log(`   説明: ${practice.description}`);
    console.log(`   ガイドライン:`);
    practice.guidelines.forEach((guideline) => {
      console.log(`   - ${guideline}`);
    });
    console.log("");
  });
}

// 実用的なテンプレート例
export const practicalTemplates = {
  // 教育向けテンプレート
  education: `
# 学習者プロフィール

## 基本情報
- 名前:
- 年齢:
- 学習レベル:
- 学習目標:

## 学習状況
- 現在学習中の科目:
- 理解度:
- 学習スタイル:
- 学習時間:

## 進捗管理
- 完了したトピック:
- 現在のトピック:
- 次のステップ:
- 課題や困難:

## 学習履歴
- 過去の学習内容:
- 得意分野:
- 苦手分野:
- 成功した学習方法:
  `,

  // プロジェクト管理向けテンプレート
  projectManagement: `
# プロジェクト管理プロフィール

## プロジェクト情報
- プロジェクト名:
- ステータス:
- 開始日:
- 締切:
- 優先度:

## チーム情報
- チームサイズ:
- 役割:
- 責任範囲:
- 連絡先:

## 技術情報
- 使用技術:
- 開発環境:
- 依存関係:
- 制約事項:

## 進捗管理
- 完了したタスク:
- 進行中のタスク:
- 未完了のタスク:
- リスク要因:
- マイルストーン:
  `,

  // ヘルスケア向けテンプレート
  healthcare: `
# ヘルスケアプロフィール

## 基本情報
- 名前:
- 年齢:
- 性別:
- 連絡先:

## 健康情報
- 既往歴:
- 現在の症状:
- 服用中の薬:
- アレルギー:

## 生活習慣
- 運動習慣:
- 食事習慣:
- 睡眠パターン:
- ストレスレベル:

## 医療履歴
- 過去の診察:
- 検査結果:
- 治療履歴:
- フォローアップ予定:
  `,
};

// デモ実行
implementBestPractices("一般的な用途");
